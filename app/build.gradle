/*buildscript {
    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.1.0"
    }
}*/

plugins {
    id 'com.android.application'
    id 'com.github.node-gradle.node'
}

android {
    namespace 'ch.mypi.noad'
    compileSdk 33

    defaultConfig {
        applicationId "ch.mypi.noad"
        minSdk 31
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation "androidx.lifecycle:lifecycle-service:2.6.1"
    implementation 'androidx.navigation:navigation-fragment:2.5.2'
    implementation 'androidx.navigation:navigation-ui:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

node {
    download = false
    nodeProjectDir = file("${project.projectDir}/demo-js")
}

tasks.register('packageJs', Zip) {

    dependsOn 'npmInstall'

    archiveFileName = "demo-js.zip"
    destinationDirectory = layout.projectDirectory.dir('src/main/assets/v1')
    exclude "**/test/*"
    include "**/*.json"
    include "**/*.js"
    include "**/*.cjs"
    include "**/*.html"
    include "**/*.css"
    include "**/*.map"
    include "public/**/*"
    from layout.projectDirectory.dir("demo-js")
}

/*task helloWorld(type: NodeTask, dependsOn: 'npmInstall') {
    script = file('src/node/index.js')
}*/

// to get rid of duplicate class errors:
// see https://stackoverflow.com/questions/75274720/a-failure-occurred-while-executing-appcheckdebugduplicateclasses/75315276#75315276

configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}